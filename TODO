- use some elm code as the source
- have an example in a file
- show characters wot are mis-typed as they are entered
- auto-pause the timer if nothing typed for a while
- track slow characters (as in slow to type)
- API & back end
  - serve exercise from a back end
  - save stats to a back end
- navigation - meaningful urls
- pretty-fication
- show stats summaries
  - graph over time of accuracy and wpm
- calculate statistics
  - save tuples of (expected, actual) for mis-types
      - only do this for the first mistake if there are more
        than one mistakes in a row
  - print which characters you got wrong


done
====
- hardcode a basic input string
- show in code block as spans class "outstanding" (gray)
- have first character class "current" (background yellow)
- read keyboard input & advance current character class when letter typed
- only advance if correct letter typed
- show red if incorrect letter typed
- see if grouping each letter with a status makes things simpler
- why can't I correct the last chracter?
- backspaces go back
- track how many errored characters have been typed
- require backspace(s) after errors
- don't handle backspaces separately
- could I put a movement element in the Chunk
- add a safeZipper that doesn't exceed it's bounds
- use Forward | Backward | Still for Chunk.next
- simplify Script.moveZipper (using the above)
- rename Script.chunks -> Script.toList
- rename Script.tick -> Script.consume (ditto for Chunk)
- simplify Script.setCurrentStatus (if I can work out how)
- detect if finished - print completion message on the screen
- should I rename Script -> Exercise
    && Chunk -> Step
    && Script.workbook -> Script.steps
    && Script.toList -> Script.steps
- calculate statistics
  - save the total number of mis-typed characters (excluding backspaces)
  - print accuracy
- improved readme
- add a timer
  - show time taken
  - print wpm
  - show the time mins : secs on screen whilst exercise is in progress
- does it work with multi-line strings?
  - ignore whitespace at start of a line
