- add a timer
  - perhaps keep track of elapsed time in the outer application
    and pass in the time since the last key press to Exercise.consume
    The exercise can add these intervals up as the exercise
    progresses and use the total in a wpm calcualtion.
    Side advantages of doing it this way are the potential to
    save this along with the character to track timing information for
    different keys as well as feeding the time into a separate thing
    which will display a stopwatch on the screen, plus the handling of
    effectivly pausing the stopwatch if nothing is typed for a while
    (the last 2 of which can be handled outside the exercise module).
  - print wpm
  - show the time mins : secs on screen whilst exercise is
    in progress
- does it work with multi-line strings?
  - how to show <CR> (and don't count them
    in character count)
  - ignore whitespace at start of a line
  - use code as the source
- API & back end
  - serve exercise from a back end
  - save stats to a back end
- navigation - meaningful urls
- pretty-fication
- show stats summaries
  - graph over time of accuracy and wpm
- calculate statistics
  - save tuples of (expected, actual) for mis-types
      - only do this for the first mistake if there are more
        than one mistakes in a row
  - print which characters you got wrong


done
====
- hardcode a basic input string
- show in code block as spans class "outstanding" (gray)
- have first character class "current" (background yellow)
- read keyboard input & advance current character class when letter typed
- only advance if correct letter typed
- show red if incorrect letter typed
- see if grouping each letter with a status makes things simpler
- why can't I correct the last chracter?
- backspaces go back
- track how many errored characters have been typed
- require backspace(s) after errors
- don't handle backspaces separately
- could I put a movement element in the Chunk
- add a safeZipper that doesn't exceed it's bounds
- use Forward | Backward | Still for Chunk.next
- simplify Script.moveZipper (using the above)
- rename Script.chunks -> Script.toList
- rename Script.tick -> Script.consume (ditto for Chunk)
- simplify Script.setCurrentStatus (if I can work out how)
- detect if finished - print completion message on the screen
- should I rename Script -> Exercise
    && Chunk -> Step
    && Script.workbook -> Script.steps
    && Script.toList -> Script.steps
- calculate statistics
  - save the total number of mis-typed characters (excluding backspaces)
  - print accuracy
- improved readme
